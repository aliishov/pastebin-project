services:
    postgres:
      image: postgres:16
      container_name: postgres_container
      restart: always
      environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: pastebin_db
      ports:
        - "5432:5432"
      volumes:
        - postgres_data:/var/lib/postgresql/data
      networks:
        - pastebin-net

    pgadmin:
      image: dpage/pgadmin4:latest
      container_name: pgadmin_container
      restart: always
      environment:
        PGADMIN_DEFAULT_EMAIL: alishov7394@gmail.com
        PGADMIN_DEFAULT_PASSWORD: admin
      ports:
        - "5050:5050"
      depends_on:
        - postgres
      networks:
        - pastebin-net

    zookeeper:
      image: confluentinc/cp-zookeeper:latest
      container_name: zookeeper
      environment:
        ZOOKEEPER_SERVER_ID: 1
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
      ports:
        - "22181:2181"
      networks:
        - pastebin-net

    kafka:
      image: confluentinc/cp-kafka:latest
      container_name: ms_kafka
      ports:
        - "9092:9092"
      depends_on:
        - zookeeper
      environment:
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      networks:
        - pastebin-net

    redis:
      image: redis:latest
      container_name: ms_redis
      ports:
        - "6379:6379"
      networks:
        - pastebin-net

    elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch:8.7.1
      container_name: elasticsearch-spring
      environment:
        - discovery.type=single-node
        - xpack.security.enabled=false
      ports:
        - "9200:9200"
      networks:
        - pastebin-net

    kibana:
      image: docker.elastic.co/kibana/kibana:8.7.1
      container_name: kibana-spring
      environment:
        - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      ports:
        - "5601:5601"
      depends_on:
        - elasticsearch
      networks:
        - pastebin-net

    logstash:
      image: docker.elastic.co/logstash/logstash:8.7.1
      container_name: logstash
      volumes:
        - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      ports:
        - "5044:5044"
      depends_on:
        - elasticsearch
      networks:
        - pastebin-net

    filebeat:
      image: docker.elastic.co/beats/filebeat:8.7.1
      container_name: filebeat
      user: root
      volumes:
        - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
        - ./:/app:ro
      depends_on:
        - logstash
      networks:
        - pastebin-net

    #Microservices
    service-registry:
      build:
        context: ./service-registry
      container_name: service-registry
      ports:
        - "8000:8000"
      networks:
        - pastebin-net

    auth-service:
      build:
        context: ./auth-service
      container_name: auth-service
      ports:
        - "8010:8010"
      depends_on:
        - postgres
        - kafka
      networks:
        - pastebin-net

    paste-service:
      build:
        context: ./paste-service
      container_name: post-service
      ports:
        - "8020:8020"
      depends_on:
        - postgres
        - kafka
        - redis
        - elasticsearch
      networks:
        - pastebin-net

    user-service:
      build:
        context: ./user-service
      container_name: user-service
      ports:
        - "8040:8040"
      depends_on:
        - postgres
        - auth-service
        - paste-service
      networks:
        - pastebin-net

    notification-service:
      build:
        context: ./notification-service
      container_name: notification-service
      ports:
        - "8050:8050"
      depends_on:
        - kafka
        - user-service
      networks:
        - pastebin-net

    search-service:
      build:
        context: ./search-service
      container_name: search-service
      ports:
        - "8060:8060"
      depends_on:
        - elasticsearch
        - kafka
      networks:
        - pastebin-net

    api-gateway:
      build:
        context: ./api-gateway
      container_name: api-gateway
      ports:
        - "8080:8080"
      depends_on:
        - service-registry
        - auth-service
        - paste-service
        - user-service
        - notification-service
        - search-service
      networks:
        - pastebin-net

networks:
  pastebin-net:
    driver: bridge

volumes:
  postgres_data: